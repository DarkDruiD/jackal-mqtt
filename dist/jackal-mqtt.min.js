function DataService(){var e={data:{}};return e}function MqttService(e,t){function n(e,t,n){f[e]=[t,n]}function a(e){delete f[e]}function c(e,t){var n="^";t+="/";for(var a=e.split("/"),c=0;c<a.length;c++){var i=a[c];"+"===i?n="([a-z]|[0-9])+/":n+="#"===i?"(([a-z]|[0-9])|/)*":i+"/"}return n+="$",n=new RegExp(n),n.test(t)?!0:!1}function i(t){0!==t.errorCode&&e.$broadcast("connectionLost")}function r(n){for(var a=n.payloadString,i=n.destinationName,r=0;r<f.length;r++){var o=c(r,i);o&&(t.data[f[r][1]]=JSON.parse(a),e.$broadcast(f[r][0]))}}function o(e,t,n){v=new b.MQTT.Client(e,Number(t),"web_client_"+Math.random()),v.onConnectionLost=i,v.onMessageArrived=r,v.connect(n)}function s(){v.disconnect()}function u(e,t,a){v.subscribe(e),n(e,t,a)}function l(e){v.unsubscribe(e),a(e)}function d(e,t,n){var a=JSON.stringify(t),c=new b.MQTT.Message(a);c.retained=n,c.detinationName=e,v.send(c)}var v,f={},b=b;return{connect:o,disconnect:s,subscribe:u,unsubscribe:l,publish:d,_addCallback:n,_deleteCallback:a,_chanelMatch:c,_callbacks:f}}!function(e){e.module("jackalMqtt.config",[]).value("jackalMqtt.config",{debug:!0}),e.module("jackalMqtt.services",[]),e.module("jackalMqtt",["jackalMqtt.config","jackalMqtt.services"])}(angular),angular.module("jackalMqtt.services").factory("mqttService",MqttService).factory("dataService",DataService),DataService.$inject=[],MqttService.$inject=["$rootScope","dataService"];